/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package net.ocsoft.nodejs

import spock.lang.Specification
import org.gradle.testkit.runner.GradleRunner

/**
 * A simple functional test for the 'gradle.nodejs.greeting' plugin.
 */
public class PluginNpmFunctionalTest extends Specification {
    def "can npm run"() {
        given:
        def projectDir = new File("build/functionalTest/npm-run-1")
        projectDir.mkdirs()
        new File(projectDir, "settings.gradle").text = ""
        new File(projectDir, "build.gradle").text = """
plugins {
    id('net.ocsoft.nodejs')
}

nodejsSettings {
    installNodeModules = true
}

tasks.nodejsModules.configure {
    install 'yaml'
}

tasks.npm_gradleRun.configure {
    command = 'run-script'
    args 'gradle-run'
    workingDir = projectDir
    dependsOn tasks.nodejsModules
}

task npmTest {
    dependsOn npm_gradleRun
}
"""
        new File(projectDir, "package.json").text = '''
{
    "name": "npm-run-1",
    "scripts": {
        "gradle-run" : "node index.js"
    }
}
'''
        new File(projectDir, "index.js").text = '''
const yaml = require('yaml')
const fs = require('fs')

const yamlContents = fs.readFileSync('./npm-run.yaml', 'utf8')

console.log(yaml.parse(yamlContents).message)
'''
       new File(projectDir, "npm-run.yaml").text = '''
message:
  Like a complete unknown, like a rolling stone 
''' 
        when:
        def runner = GradleRunner.create()
        runner.forwardOutput()
        runner.withPluginClasspath()
        runner.withArguments("npmTest")
        runner.withProjectDir(projectDir)
        def result = runner.build()

        then:
        result.output.contains("like a rolling stone")
    }
}
// vi: se ts=4 sw=4 et:
