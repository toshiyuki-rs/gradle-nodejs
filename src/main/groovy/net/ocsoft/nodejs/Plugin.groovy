/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package net.ocsoft.nodejs

import org.gradle.api.Project
import org.gradle.api.Plugin
import org.gradle.api.NamedDomainObjectFactory

/**
 * A simple 'hello world' plugin.
 */
public class Plugin implements org.gradle.api.Plugin<Project> {

    private final static String CLI_PREFIX = "nodeCli"
    public void apply(Project project) {
        def settings = new Settings(project.objects)
        project.extensions.add("nodejsSettings", settings)
         
        project.tasks.addRule(
            "${CLI_PREFIX}_<Module>_<Command>_<Id> Run node cli",
            createCliRuleHandler(project))
    }

    /**
     * cli rule handler
     */
    Closure createCliRuleHandler(Project project) {
        return {
            def prefix = "${CLI_PREFIX}_"
            def pos = it.indexOf(CLI_PREFIX) 
            def taskName = it
            if (pos == 0) {
                def moduleCommandName = it.substring(prefix.length()) 
                def elems  = moduleCommandName.split("_")
                String[] moduleCommand
                if (elems.length > 1) {
                    moduleCommand = [
                        elems[0],
                        elems[1]
                    ]
                } else {
                    moduleCommand = [
                        elems[0], 
                        elems[0]
                    ]
                }
                def task = project.tasks.findByPath(taskName) 
                if (task == null) {
                    CliTask.registerTask(project, moduleCommand, taskName)
                }
            }
        }
    }
}
// vi: se ts=4 sw=4 et:
